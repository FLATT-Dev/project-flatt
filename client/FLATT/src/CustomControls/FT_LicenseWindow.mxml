<?xml version="1.0" encoding="utf-8"?>
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:CustomControls="CustomControls.*"
		  width="400" height="300" 
		  minWidth="400"  minHeight="300" 
		  maxWidth="400" maxHeight="400"
		  closing="OnClosing(event)"
		  creationComplete="OnInit()"
		   >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>	
		<![CDATA[
			import FLATTPlugin.*;
			
			import Utility.*;
			
			import com.ZG.Events.*;
			import com.ZG.Logging.*;
			import com.ZG.Utility.*;
			
			import mx.events.ResizeEvent;
			//================================================
			private static	var	s_Instance:FT_LicenseWindow;
			private var _wasOpened:Boolean;
			//------------------------------------------------
			public static function GetInstance(makeVisible:Boolean = true ):FT_LicenseWindow
			{
				if(s_Instance == null)
				{
					s_Instance = new FT_LicenseWindow();
					if(makeVisible)
					{
						s_Instance.open();
					}
				}
				else
				{
					if(makeVisible)
					{
						if(!s_Instance.wasOpened)
						{
							s_Instance.open();
						}
						// explicitly make window visible - it causes all children to become visible
						// in flex 3 could just call activate
						
						s_Instance.visible = true;
						s_Instance.activate();
					}
				}
				return s_Instance;
			}
			
			//------------------------------------------------
			private function OnInit():void
			{
				this.title = ZG_Utils.TranslateString("License");	
				
				m_LicenseView.addEventListener(Event.CLOSE,OnClose);
				m_LicenseView.addEventListener(FT_Events.FT_EVT_VERT_RESIZE,OnVertResize);
				
			}
			//------------------------------------------------
			// this prevents the window from being closed and just hides it
			private function OnClosing(event:Event):void
			{
				event.preventDefault();			 	
				s_Instance.visible = false;					   
			}
			
			//------------------------------------------------
			override public function open(openWindowActive:Boolean = true):void
			{
				_wasOpened = true;
				super.open(openWindowActive);
			}
			//------------------------------------------------
			public function get wasOpened():Boolean
			{
				return _wasOpened;
			}
			//------------------------------------------------
			public function set wasOpened(value:Boolean):void
			{
				_wasOpened = value;
			}
			//------------------------------------------------
			public function OnClose(event:Event):void
			{
				this.close();
			}
			//-----------------------------------------------
			public function OnVertResize(evt:ZG_Event):void
			{
				var delta:Number = ZG_StringUtils.StringToNumEx(evt.data as String);				
				this.height +=delta;
			}
			//------------------------------------------
			protected function OnCloseWindow(event:Event):void
			{				
				// just hide it
				//dispatchEvent(new Event(Event.CLOSE));
				this.close();
			}
		]]>
	</fx:Script>
	<CustomControls:FT_LicenseView id="m_LicenseView" x="0" y="0" width="100%" height="100%">
	</CustomControls:FT_LicenseView>
	
		
</s:Window>
